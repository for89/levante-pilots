```{r setup}
library(tidyverse)
library(here)
library(glue)

library(ggthemes)
.font <- "Source Sans Pro"
theme_set(theme_bw(base_size = 14, base_family = .font))
theme_update(panel.grid = element_blank(),
             strip.background = element_blank(),
             legend.key = element_blank(),
             panel.border = element_blank(),
             axis.line = element_line(),
             strip.text = element_text(face = "bold"))
```

```{r}
sites <- c("ca_pilot", "co_pilot", "de_pilot")

participants <- sites |>
  set_names() |>
  map(\(s) read_rds(here(glue("00_prepped_data/{s}/participants.rds")))) |>
  list_rbind(names_to = "site")
```

Combine all task scores into one plot!

```{r}
score_files <- list.files(here("02_scored_data"), pattern = "*.rds",
                          full.names = TRUE)
score_list <- score_files |> map(read_rds)
# exclude_tasks <- c("hostile-attribution", "pa-es")
# score_list <- read_rds("scores/combined_scores.rds")

task_categories <- tribble(
  ~task, ~task_category,
  "hearts-and-flowers", "executive function",
  "same-different-selection", "executive function",
  "memory-game", "executive function",
  "egma-math", "math",
  "matrix-reasoning", "reasoning",
  "mental-rotation", "spatial cognition",
  "trog", "language",
  "vocab", "language",
  "pa-es", "reading",
  "sre-es", "reading",
  "swr-es", "reading",
  "pa", "reading",
  "sre", "reading",
  "swr", "reading",
  "emotion-reasoning", "social cognition",
  "theory-of-mind", "social cognition",
  "hostile-attribution", "social cognition"
) |> mutate(task_category = task_category |> str_to_sentence() |> fct_inorder())

run_ages <- participants |>
  select(user_id, ages) |>
  unnest(ages)

scores <- score_list |>
  bind_rows() |>
  rename(task = task_id) |>
  left_join(run_ages) |>
  filter(!is.na(age), age >= 5, age <= 12) |>
  left_join(task_categories) |>
  group_by(site, task) |>
  mutate(site_task_n = n_distinct(user_id),
         site_task_label = glue("{task}\n(n = {site_task_n})")) |>
  group_by(task) |>
  mutate(task_label = glue("{task}\n(n = {n_distinct(user_id)})")) |>
  ungroup() |>
  mutate(site_label = site |>
           # fct_relevel("co_pilot", "de_pilot", "ca_pilot") |>
           fct_recode("Canada" = "ca_pilot",
                      "Colombia" = "co_pilot",
                      "Germany" = "de_pilot")) |>
  group_by(site) |>
  mutate(site_label = glue("{site_label} (n = {n_distinct(user_id)})")) |>
  ungroup()
  # mutate(score_type = score_type |> str_remove(" \\(.*\\)"))

task_categories_vec <- levels(scores$task_category)
task_pal <- ptol_pal()(length(task_categories_vec)) |> set_names(task_categories_vec)
```

```{r}
task_plot_pooled <- \(scores, ylab, nr = NULL, nc = NULL) {
  ggplot(scores, aes(x = age, y = metric_value)) +
    ggh4x::facet_nested_wrap(vars(task_category, task_label),
                             nrow = nr, ncol = nc,
                             nest_line = element_line(), solo_line = TRUE,
                             axes = "x",
                             scales = "free_y") +
    geom_point(aes(colour = task_category), alpha = 0.5) +
    geom_smooth(aes(group = site), method = "gam", colour = "darkgrey", formula = y ~ s(x, bs = "re")) +
    scale_x_continuous(breaks = seq(6, 14, 2)) +
    scale_colour_manual(values = task_pal) +
    labs(x = "Age (years)", y = ylab,
         caption = glue("Note: includes only tasks with at least {threshold_n} observations")) +
    guides(colour = "none")
}

task_plot_sites <- \(scores, ylab, nr = NULL, nc = NULL) {
  ggplot(scores, aes(x = age, y = metric_value)) +
    ggh4x::facet_nested_wrap(vars(site_label, task_category, site_task_label),
                             nrow = nr, ncol = nc,
                             nest_line = element_line(), solo_line = TRUE,
                             axes = "x",
                             scales = "free_y") +
    geom_point(aes(colour = task_category), alpha = 0.5) +
    geom_smooth(aes(group = site), method = "gam", colour = "darkgrey", formula = y ~ s(x, bs = "re")) +
    scale_x_continuous(breaks = seq(6, 14, 2)) +
    scale_colour_manual(values = task_pal) +
    labs(x = "Age (years)", y = ylab,
         caption = glue("Note: includes only tasks with at least {threshold_n} observations")) +
    guides(colour = "none")
}
```

```{r}
threshold_n <- 10
threshold_scores <- scores |> filter(site_task_n >= threshold_n)

sumscores <- threshold_scores |> filter(metric_type == "prop_correct")

task_plot_pooled(sumscores, ylab = "Proportion correct", nr = 2)
ggsave(here("03_summaries/plots/sumscores_pooled.png"), width = 15, height = 6)

task_plot_sites(sumscores, ylab = "Proportion correct", nc = 7)
ggsave(here("03_summaries/plots/sumscores_sites.png"), width = 15, height = 15)
```

```{r}
irt_scores <- threshold_scores |>
  filter(str_detect(metric_type, "ability"))

task_plot_pooled(irt_scores, ylab = "Ability", nr = 2)
ggsave(here("03_summaries/plots/abilities_pooled.png"), width = 9, height = 6)

task_plot_sites(irt_scores, ylab = "Ability", nc = 4)
ggsave(here("03_summaries/plots/abilities_sites.png"), width = 9, height = 15)

task_metrics <- tribble(
  ~task, ~metric_type,
  "hearts-and-flowers", "prop_correct",
  "same-different-selection", "ability",
  "memory-game", "longest_span",
  "egma-math", "ability",
  "matrix-reasoning", "ability",
  "mental-rotation", "ability",
  "trog", "ability",
  "vocab", "ability",
  "pa-es", "prop_correct",
  "sre-es", "prop_correct",
  "swr-es", "ability",
  "pa", "prop_correct",
  "sre", "prop_correct",
  "swr", "prop_correct",
  "emotion-reasoning", "prop_correct",
  "theory-of-mind", "ability",
  "hostile-attribution", "prop_correct"
)
```

```{r}
task_scores <- threshold_scores |>
  mutate(metric_type = if_else(str_detect(metric_type, "ability"), "ability", metric_type)) |>
  filter(!is.na(metric_value)) |>
  inner_join(task_metrics)

task_plot_pooled(task_scores, ylab = "Score", nr = 2)
ggsave(here("03_summaries/plots/scores_pooled.png"), width = 15, height = 6)

task_plot_sites(task_scores, ylab = "Score", nc = 6)
ggsave(here("03_summaries/plots/scores_sites.png"), width = 14, height = 15)
```

```{r}
task_plot_pooled(filter(task_scores, site == "ca_pilot"), ylab = "Score", nr = 2)
ggsave(here("03_summaries/plots/scores_ca.png"), width = 10, height = 6)

task_plot_pooled(filter(task_scores, site == "co_pilot"), ylab = "Score", nr = 2)
ggsave(here("03_summaries/plots/scores_co.png"), width = 14, height = 6)

task_plot_pooled(filter(task_scores, site == "de_pilot"), ylab = "Score", nr = 2)
ggsave(here("03_summaries/plots/scores_de.png"), width = 14, height = 6)


# task_plot(c("hearts-and-flowers", "memory-game", "same-different-selection"))
# ggsave("plots/ef_scores.png", width = 9, height = 4)
```
