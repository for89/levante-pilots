---
title: "lang_lit_efa"
format: html
editor: visual
---

Helper functions

```{r}
#| echo: false

source(here("02_score_data","irt_helpers.R"))
source(here::here("plot_settings.R"))
source(here("03_explore_tasks/explore_helper.R"))

```

# May 8, updates
Load irt scores for trog and vocab

```{r}
best_multigroup <- readRDS(here("02_scoring_outputs", "irt_outputs", "multigroup_best_outputs.rds"))
multigroup_scores <- readRDS(here("02_scoring_outputs", "scores", "multigroup_scores.rds"))
names(multigroup_scores)

# Add age
run_data_combined <- read_rds(here("01_fetched_data", "run_data.rds"))
run_ages <- run_data_combined |>
  filter(site != "us_pilot") |>
  select(site, run_id, user_id, age) |>
  distinct()

lang_lit_scores <- multigroup_scores |>
  filter(item_task %in% c("trog", "vocab"), site != "us_pilot") |>
  select(site, item_task, user_id, run_id, metric_type, metric_value) |>
  left_join(run_ages, by = c("site", "user_id", "run_id"))

# check n's
lang_lit_scores |>
  distinct(site, item_task, user_id) |>
  count(site, item_task, name = "n_users")


```

Load swr from thetas file

```{r}
# check what's in scores_thetas
scores_thetas <- read_rds(here("02_scoring_outputs/scores/roar_thetas.rds"))
glimpse(scores_thetas)

swr <- read_rds(here("02_scoring_outputs/scores/roar_thetas.rds")) |>
  filter(task_id %in% c("swr", "swr-de", "swr-es")) |>
  select(site, task_id, user_id, run_id, metric_type, metric_value)
n_distinct(swr$user_id) #518

swr <- swr |>
  mutate(task_id = "swr")

```

Score SRE manually

```{r}
task_data_nested <- read_rds(here("01_fetched_data/task_data_nested.rds"))
names(task_data_nested)
glimpse(task_data_nested)

# load re-score
source(here("02_score_data", "irt_helpers.R"))
ls()

task_data_combined <- task_data_nested |>
  filter(item_task == "sre") |>
  unnest(data)

sre_all <- task_data_combined |>
  filter(str_detect(task_id, "sre"))

sre <- sre_all |>
  group_by(site, task_id, user_id, run_id) |>
  filter(site != "ca_pilot" | timestamp < timestamp[min(trial_number)] + 180) |>
  summarise(metric_value = (sum(correct) - sum(!correct)) / 180, .groups = "drop") |>
  mutate(metric_type = "guessing_adjusted_number_correct")

n_distinct(sre$user_id) #36

```

Combine all scores

```{r}

lang_lit_combined <- bind_rows(
  lang_lit_scores |> rename(task_id = item_task),
  swr,
  sre
)

efa_data <- lang_lit_combined |>
  select(user_id, task_id, metric_value) |>
  group_by(user_id, task_id) |>
  summarise(metric_value = mean(metric_value, na.rm = TRUE), .groups = "drop") |>
  pivot_wider(names_from = task_id, values_from = metric_value)

# check n's
glimpse(efa_data)

efa_data |>
  summarise(across(-c(user_id), ~sum(!is.na(.))))

```

EFA

```{r}

efa_matrix <- efa_data |>
  select(trog, vocab, swr)

efa_matrix <- efa_matrix[rowSums(!is.na(efa_matrix)) >= 2, ]

fa.parallel(efa_matrix, fa = "fa", use = "pairwise")

library(psych)
efa_result <- fa(efa_matrix, nfactors = 1, rotate = "none", use = "pairwise", fm = "ml")

print(efa_result, digits = 3, cut = 0.3)

fa.diagram(efa_result)

```

Check if it's feasible to do efa within a site

```{r}

lang_lit_combined |>
  select(site, user_id, task_id) |>
  distinct() |>
  count(site, user_id, name = "n_tasks") |>
  filter(n_tasks >= 3) |>
  count(site, name = "n_users_with_3plus_tasks") |>
  arrange(desc(n_users_with_3plus_tasks))

#no, only 7 users in Canada have data on all three

```

Load data for trog and vocab only

```{r}
library(janitor)
library(lavaan)

ll_scores <- filter(multigroup_scores, 
                    task_id %in% c("trog", "vocab"))  

ll_scores_irt <- ll_scores |>
  select(site, task_id, metric_value, user_id) |>
  pivot_wider(
    names_from = "task_id", 
    values_from = "metric_value", 
    id_cols = c("user_id", "site")
  ) |>
  janitor::clean_names() |>
  mutate(
    across(c(trog, vocab), ~ scale(.x)[, 1])
  )

# Add age
run_ages <- run_ages |>
  mutate(site = case_when(
    site == "1" ~ "ca_pilot",
    site == "2" ~ "co_pilot",
    site == "3" ~ "de_pilot",
    TRUE ~ site  # fallback
  ))

# Ensure one row per user_id and site
ages <- multigroup_scores |>
  select(site, run_id, user_id) |>
  distinct() |>
  left_join(run_ages, by = c("user_id", "site")) |>
  distinct(user_id, site, .keep_all = TRUE) 

# Join age into the IRT scores table
ll_scores_irt <- ll_scores_irt |>
  left_join(ages |> select(user_id, site, age), by = c("user_id", "site"))

```

EFA

```{r}
cfa_model <-  "
ll =~ trog + vocab 
ll ~ age
"

fit <- cfa(cfa_model, ll_scores_irt, std.lv=TRUE, missing='fiml')
summary(fit, fit.measures=TRUE, standardize=TRUE)

semPaths(
  fit,
  what = "std",
  layout = "tree",
  edge.label.cex = 1.2,
  sizeMan = 8,
  sizeLat = 8,
  residuals = TRUE,
  intercepts = FALSE,
  title = FALSE,
  style = "lisrel",
  edge.color = "black",
  residual.color = "darkred",
  mar = c(4, 4, 4, 4),
  edge.width = 1,
  fade = FALSE,
  asize = 2                 
)

```


```{r}

```

```{r}

```
