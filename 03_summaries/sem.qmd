```{r setup}
library(tidyverse)
library(here)
library(glue)
library(lavaan)
library(tidySEM)
library(ggthemes)
library(dplyr)
library(tidyr)
library(GGally)
library(ggplot2)
library(corrplot)


source(here("02_score_data","irt_helpers.R"))
source(here("03_summaries", "plotting_helper.R"))
source(here("03_explore_tasks/explore_helper.R"))

```

11.08.2025 Load new data

```{r}
# all scores

task_scores <- read_rds(here("02_scoring_outputs","scores",
                             "scores_combined.rds"))
View(task_scores)
colnames(task_scores)
unique(task_scores$item_task)
table(task_scores$item_task)

# age
summary(task_scores$age)
core_tasks   <- c("matrix","mrot","math","hf","mg","sds","trog","vocab","tom")
ages_per_user <- all_scores %>%
  group_by(user_id) %>%
  summarise(
    n_ages = n_distinct(age, na.rm = TRUE),
    ages   = paste(sort(unique(na.omit(age))), collapse = ", "),
    .groups = "drop"
)
ages_per_user
```

correlation matrix

```{r}

vars <- c("math","matrix","mrot","sds","hf","mg",
          "trog","vocab","tom","swr","sre","pa","mefs")

per_task_first <- task_scores %>%
  filter(item_task %in% vars) %>%
  arrange(user_id, item_task, time_started) %>%
  group_by(user_id, item_task) %>%
  slice(1) %>%
  ungroup()

per_task_first
# wide format
wide_scores <- per_task_first %>%
  select(user_id, item_task, metric_value) %>%
  pivot_wider(names_from = item_task, values_from = metric_value)

# get one age + site per child (earliest run overall)
age_site_df <- task_scores %>%
  arrange(user_id, time_started) %>%
  group_by(user_id) %>%
  slice(1) %>%
  ungroup() %>%
  transmute(user_id,
            age  = as.numeric(age),
            site = site)

# join back to wide_scores
wide_scores <- wide_scores %>%
  left_join(age_site_df, by = "user_id") %>%
  as.data.frame()

# correlation matrix
cor_mat <- wide_scores %>%
  select(all_of(vars)) %>%
  as.data.frame() %>%
  cor(use = "pairwise.complete.obs", method = "pearson")
cor_mat

corrplot(cor_mat,
         method = "color",        
         type = "lower",          
         addCoef.col = "black",   
         tl.col = "black",        
         tl.cex = 0.7,            
         number.cex = 0.6)
```
# CFA 

```{r}
cfa_model <-  "
reasoning =~ matrix + mrot 
ef =~ hf + mg + sds + mefs
social =~ tom
language =~ trog + vocab + sre + swr + pa
maths =~ math
"

fit <- cfa(cfa_model, wide_scores, std.lv=TRUE, missing='fiml')
summary(fit, fit.measures=TRUE, standardize=TRUE)
print(fitMeasures(fit, c("cfi","tli","rmsea","srmr")))

```

```{r}
layout <- matrix(
  nrow = 4, ncol = 14, byrow = TRUE,
  data = c(
  "matrix","mrot","hf","mg","sds","mefs","tom","trog","vocab","sre","swr","pa","math", NA,
  NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
  NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
  "reasoning", NA, "ef", NA, NA, NA, "social", "language", NA, NA, NA, NA, "maths", NA
  )
)

graph_sem(model = fit, text_size = 3, layout = t(layout)) +
  theme(panel.background = element_rect(fill = "white"))

ggsave(here("03_summaries/plots/sem_all.png"), width = 14, height = 10)

```

Add age. 

```{r}
cfa_model_age <-  "
# measurement
reasoning =~ matrix + mrot 
ef =~ hf + mg + sds + mefs
social =~ tom
language =~ trog + vocab + sre + swr + pa
maths =~ math

# age regressions
reasoning ~ age
ef ~ age
social ~ age
language ~ age
maths ~ age
"

fit_age <- cfa(cfa_model_age, wide_scores, std.lv=TRUE, missing='fiml')
summary(fit_age, fit.measures=TRUE, standardize=TRUE)
print(fitMeasures(fit_age, c("cfi","tli","rmsea","srmr")))


layout_age <- matrix(
  nrow = 4, ncol = 14, byrow = TRUE,
  data = c(
  "matrix","mrot","hf","mg","sds","mefs","tom","trog","vocab","sre","swr","pa","math", NA,
  NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
  NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,
  "reasoning", NA, "ef", NA, NA, NA, "social", "language", NA, NA, NA, NA, "maths", NA
  )
)

graph_sem(model = fit_age, text_size = 3, layout = t(layout_age)) + 
  theme(panel.background = element_rect(fill = "white"))
ggsave(here("03_summaries/plots/sem_age_all_tasks.png"), width = 14, height = 10)
```

check Canada - too few data points for CFA; need to drop MEFS

```{r}
unique(wide_scores$site)
table(wide_scores$site)

by_stats <- lapply(split(wide_scores, wide_scores$site), function(df){
  data.frame(
    var = vars,
    prop_missing = colMeans(is.na(df[vars])),
    sd = sapply(df[vars], sd, na.rm = TRUE),
    n = nrow(df)
  )
})
by_stats$pilot_western_ca  # inspect this first

# drop MEFS, and ROAR tasks in the cfa

```

cfa - core tasks only with age, 09.10

```{r}
library(lavaan)

vars_core <- c("matrix","mrot","hf","mg","sds","trog","vocab","math","tom")
vars_core_std <- wide_scores %>%
  mutate(across(all_of(vars_core), ~ as.vector(scale(.x))))
str(vars_core_std[vars_core])

cfa_model_age_2 <- '
  reasoning =~ matrix + mrot + math
  ef =~ hf + mg + sds
  language =~ trog + vocab
  social =~ tom 

  reasoning ~ age
  ef        ~ age
  language  ~ age
  social ~ age'

fit_cfg <- sem(cfa_model_age_2, data = vars_core_std,
               std.lv = TRUE, missing = "fiml")

print(fitMeasures(fit_cfg, c("cfi","tli","rmsea","srmr")))
print(summary(fit_cfg, fit.measures = TRUE, standardized = TRUE))

```

plot for all three sites together

```{r}
layout_age2 <- matrix(
  byrow = TRUE, nrow = 3,
  data = c(
    "matrix","mrot","math","hf","mg","sds","trog","vocab","tom","age",
    NA,       NA,    NA,   NA,  NA,  NA,   NA,    NA,     NA,  NA,
    "reasoning", NA,  NA, "ef", NA,  NA, "language", NA, "social", NA
  )
)

p <- graph_sem(
  fit_cfg,
  layout = t(layout_age2),
  prune = 0,           # never drop edges for non-sig
  pars = c("loadings", "regressions"),
  cov = FALSE,         # omit dashed factor covariances to unclutter
  digits = 2
)
p
ggsave(here("03_summaries/plots/sem_age_core_tasks.png"), width = 14, height = 10)


# check why age - ef is missing
parameterEstimates(fit_cfg, standardized = TRUE) |>
  dplyr::filter(lhs == "ef", op == "~", rhs == "age")


# alternative plot
library(semPlot)
p_alt <- semPaths(fit_cfg, whatLabels = "std", layout = "tree",
         residuals = FALSE, intercepts = FALSE, edge.label.cex = .9)




```

plot by site, 09.10

```{r}

layout_age2 <- matrix(
  byrow = TRUE, nrow = 3,
  data = c(
    "matrix","mrot","math","hf","mg","sds","trog","vocab","tom","age",
    NA,       NA,    NA,   NA,  NA,  NA,   NA,    NA,     NA,  NA,
    "reasoning", NA,  NA, "ef", NA,  NA, "language", NA, "social", NA
  )
)

plot_site <- function(st) {
  fit <- sem(cfa_model_age_2, data = subset(wide_std, site == st),
             std.lv = TRUE, missing = "fiml")
  graph_sem(fit, layout = layout_age2, text_size = 6, edge_label = "est_std") +
    ggplot2::ggtitle(st)
}

for (st in levels(wide_std$site)) {
  ragg::agg_png(here::here("03_summaries/plots", paste0("sem_age_", st, ".png")),
                width = 16, height = 8, units = "in", res = 600)
  print(plot_site(st))
  dev.off()
}

plot_site(levels(wide_std$site)[1])
plot_site(levels(wide_std$site)[2])
plot_site(levels(wide_std$site)[3])

# save
sites <- levels(wide_std$site)

for (st in sites) {
  p_site <- plot_site(st)  # your function from earlier
  fname  <- here::here(
    "03_summaries","plots",
    paste0("sem_age_", str_replace_all(st, "[^A-Za-z0-9]+", "_"), ".png")
  )
  ggplot2::ggsave(
    filename = fname,
    plot     = p_site,
    width    = 12, height = 7, units = "in",
    dpi      = 600,
    device   = ragg::agg_png  # crisp text; optional
  )
}

```

### MEFS

```{r}
mefs <- task_scores %>%
  filter(item_task == "mefs") %>%
  select(user_id, run_id, time_started, site, age, mefs = metric_value)

summary(mefs)

# Count by site
by_site <- task_scores %>%
  filter(item_task == "mefs", !is.na(metric_value)) %>%
  distinct(user_id, site) %>%
  count(site, name = "n_participants") %>%
  arrange(desc(n_participants))

by_site
```

Histogram

```{r}
mefs_scores <- task_scores %>%
  filter(item_task == "mefs") %>%
  select(user_id, site, age, metric_value)

summary(mefs_scores$metric_value)
hist(mefs_scores$metric_value, breaks = 30,
     main = "Distribution of MEFS IRT scores", xlab = "θ (executive function ability)")
```

By site

```{r}
ggplot(mefs, aes(metric_value)) +
  geom_histogram(bins = 30, color = "white") +
  facet_wrap(~ site, scales = "free_y") +
  labs(x = "MEFS IRT score (θ)", y = "Count") 


```

Scatterplot age

```{r}
ggplot(mefs, aes(age, metric_value)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = TRUE) +
  labs(x = "Age", y = "MEFS IRT score (θ)") +
  theme_minimal()

```

# Executive Funciton - SEM

```{r}
ef_vars <- c("hf", "mg", "sds", "mefs")
ef_std <- wide_scores |>
  mutate(across(all_of(ef_vars), ~as.numeric(scale(.))))

cfa_ef <-  "
executive_function =~ hf + mg + sds + mefs
executive_function ~ age
"

# check mefs which I'm analysing; one is percentile and one is a standard score (std scores goes up with age)

fit_ef <- cfa(cfa_ef, ef_std, std.lv=TRUE, missing='fiml')
summary(fit_ef, fit.measures=TRUE, standardize=TRUE)
print(fitMeasures(fit_ef, c("cfi","tli","rmsea","srmr")))

```

plot

```{r}
layout_ef <- matrix(
  byrow = TRUE, nrow = 3,
  data = c(
    "hf","mg","sds","mefs", NA,  "age",
     NA,  NA,   NA,   NA,   NA,  NA,
     NA,  NA, "executive_function", NA, NA, NA
  )
)

p_ef <- tidySEM::graph_sem(
  model = fit_ef,
  layout = layout_ef,
  text_size = 4,
  edge_label = "std"
)
p_ef

```

save

```{r}
ggsave(
  filename = here("03_summaries","plots","sem_ef.png"),
  plot     = p_ef,
  width    = 10, height = 6, units = "in", dpi = 600
)
```

# Language - SEM

```{r}
lang_vars <- c("swr", "sre", "pa", "vocab", "trog")
lang_std <- wide_scores |>
  mutate(across(all_of(lang_vars), ~as.numeric(scale(.))))

cfa_lang <-  "
Language =~ swr + sre + pa + trog + vocab
Language ~ age
"

fit_lang <- cfa(cfa_lang, lang_std, std.lv=TRUE, missing='fiml')
summary(fit_lang, fit.measures=TRUE, standardize=TRUE)
print(fitMeasures(fit_lang, c("cfi","tli","rmsea","srmr")))
```

Plot

```{r}
layout_lang <- matrix(
  byrow = TRUE, nrow = 3,
  data = c(
    "swr","sre","pa","trog","vocab", NA,  "age",
    NA,    NA,   NA,  NA, NA, NA, NA,
    NA,   "Language", NA,  NA,    NA, NA,  NA
  )
)

p_lang <- tidySEM::graph_sem(
  model      = fit_lang,
  layout     = layout_lang,
  text_size  = 3,
  edge_label = "std",                 
  show       = c("paths","loadings","residuals")
)
p_lang

# check sre scoring (not a theta)
```

Pa, sre and swr problematic - check

```{r}

pe <- lavaan::parameterEstimates(fit_lang, standardized = TRUE)
pe[pe$op %in% c("=~","~~") & pe$lhs %in% c("lang","swr","sre","pa","trog","vocab"), 
   c("lhs","op","rhs","est","std.all","se","pvalue")]
# no heywood case

inds <- c("swr","sre","pa","trog","vocab")
pe <- lavaan::parameterEstimates(fit_lang, standardized = TRUE)
res <- pe %>%
  filter(op == "~~", lhs == rhs, lhs %in% inds) %>%
  transmute(indicator = lhs,
            theta_std = std.all,
            R2 = 1 - std.all,
            loading_std = sqrt(pmax(0, 1 - std.all)))
res

```

Try 2-fa solution

```{r}

cfa_lang2 <-  "
language_comp =~ swr + sre + pa 
reading_skills =~ trog + vocab 

language_comp ~ age
reading_skills ~ age
"

fit_lang2 <- cfa(cfa_lang2, wide_scores, std.lv=TRUE, missing='fiml')
summary(fit_lang2, fit.measures=TRUE, standardize=TRUE)
print(fitMeasures(fit_lang2, c("cfi","tli","rmsea","srmr")))

```

plot

```{r}
layout_lang2 <- matrix(
  byrow = TRUE, nrow = 3,
  data = c(
    "swr","sre","pa",  NA,  "trog","vocab",  NA, "age",
     NA,   NA,   NA,   NA,    NA,    NA,     NA,  NA,
    "language_comp", NA, NA, NA, "reading_skills", NA, NA, NA
  )
)

p_lang2 <- tidySEM::graph_sem(fit_lang2, layout = layout_lang2,
                        text_size = 3, edge_label = "std",
                        show = c("paths","loadings","residuals"))
print(p_lang2)

```

Invariance testing - language

```{r}

lang_vars <- c("swr","sre","pa","trog","vocab")
wide_std <- wide_scores
wide_std[lang_vars] <- lapply(wide_std[lang_vars], scale)
wide_std$site <- factor(wide_std$site)

cfa_lang2 <- '
  language_comp =~ swr + sre + pa
  reading_skills =~ trog + vocab
  
  language_comp  ~ age
  reading_skills ~ age
'
```

configural - not running because too few data points for canada

```{r}
fit_cfg_lang <- cfa(cfa_lang2, data = wide_std, group = "site",
               std.lv = TRUE, missing = "fiml", estimator = "MLR")

```




# Alternative models

# Granular construct structure

```{r}
cfa_model <-  "
reasoning =~ matrix_reasoning
spatial =~ mental_rotation 
ef =~ hearts_and_flowers + memory_game + same_different_selection
social =~ theory_of_mind
language =~ trog + vocab 
reading =~ sre + swr + pa
math =~ egma_math
"

fit <- cfa(cfa_model, scores_wide_mat, std.lv=TRUE, missing='fiml')
summary(fit, fit.measures=TRUE, standardize=TRUE)
```

```{r}
layout = matrix(nrow=4, ncol = 12, 
                data = c("matrix_reasoning", "mental_rotation", "hearts_and_flowers","memory_game", "same_different_selection", "theory_of_mind","trog","vocab","sre","swr","pa","egma_math",
                         NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
                         NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
                         "reasoning","spatial", "ef", NA, NA, "social", "language",NA, "reading", NA, NA,
                         "math"
                ), byrow = TRUE)

graph_sem(model = fit, text_size = 3, layout = t(layout)) + 
  theme(panel.background = element_rect(fill = "white"))
ggsave(here("03_summaries/plots/sem_all_granular.png"), width = 14, height = 10)

```

Add age. 

```{r}
cfa_model_age <-  "
# measurement
reasoning =~ matrix_reasoning
spatial =~ mental_rotation 
ef =~ hearts_and_flowers + memory_game + same_different_selection
social =~ theory_of_mind
language =~ trog + vocab 
reading =~ sre + swr + pa
math =~ egma_math

# age regressions
reasoning ~ age
spatial ~ age
ef ~ age
social ~ age
language ~ age
reading ~ age
math ~ age
"

fit_age <- cfa(cfa_model_age, scores_wide_mat, std.lv=TRUE, missing='fiml')
summary(fit_age, fit.measures=TRUE, standardize=TRUE)


layout_age = matrix(nrow=7, ncol = 12, 
                    data = c(
                      "matrix_reasoning", "mental_rotation", "hearts_and_flowers","memory_game", "same_different_selection", "theory_of_mind","trog","vocab","sre","swr","pa","egma_math",
                      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
                      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
                      "reasoning","spatial", "ef", NA, NA, "social","language",NA, "reading", NA, NA,
                      "math",
                      NA, NA, NA, NA, NA, NA, NA, NA,  NA, NA, NA, NA, 
                      NA, NA, NA, NA, NA, NA, NA, NA,  NA, NA, NA, NA, 
                      NA, NA, NA, NA, NA, NA, "age", NA, NA,  NA, NA, NA
                    ), byrow = TRUE)

graph_sem(model = fit_age, text_size = 3, layout = t(layout_age)) + 
  theme(panel.background = element_rect(fill = "white"))
ggsave(here("03_summaries/plots/sem_age_granular.png"), width = 14, height = 10)
```


# Site specific

```{r}

cfa_model_age_de <-  "
# measurement
reasoning =~ matrix_reasoning + mental_rotation 
ef =~ hearts_and_flowers + memory_game + same_different_selection
social =~ theory_of_mind 
language =~ trog + vocab 
math =~ egma_math

# age regressions
reasoning ~ age
ef ~ age
social ~ age
language ~ age
math ~ age
"

layout_age_de = matrix(nrow=7, ncol = 12, 
                       data = c(
                         "matrix_reasoning", "mental_rotation", "hearts_and_flowers","memory_game", "same_different_selection", "theory_of_mind","trog","vocab","sre-de","swr-de",NA,"egma_math",
                         NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
                         NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
                         "reasoning",NA, "ef", NA, NA, "social","language",NA, NA, NA, NA,
                         "math",
                         NA, NA, NA, NA, NA, NA, NA, NA,  NA, NA, NA, NA, 
                         NA, NA, NA, NA, NA, NA, NA, NA,  NA, NA, NA, NA, 
                         NA, NA, NA, NA, NA, NA, "age", NA, NA,  NA, NA, NA
                       ), byrow = TRUE)

fit_age_de <- cfa(cfa_model_age_de, 
                  filter(scores_wide_mat, site == "de_pilot"),
                  std.lv=TRUE, missing='fiml')
# summary(fit_age, fit.measures=TRUE, standardize=TRUE)


graph_sem(model = fit_age_de, text_size = 3, layout = t(layout_age_de)) + 
  theme(panel.background = element_rect(fill = "white"))
# ggsave(here("03_summaries/plots/extra/sem_age_de.png"), width = 14, height = 10)
```


```{r}

cfa_model_age_co <-  "
# measurement
reasoning =~ matrix_reasoning + mental_rotation 
ef =~ hearts_and_flowers + memory_game + same_different_selection
social =~ theory_of_mind 
language =~ trog + vocab 
math =~ egma_math

# age regressions
reasoning ~ age
ef ~ age
social ~ age
language ~ age
math ~ age
"

fit_age_co <- cfa(cfa_model_age_co, 
                  filter(scores_wide_mat, site == "co_pilot"),
                  std.lv=TRUE, missing='fiml')
# summary(fit_age, fit.measures=TRUE, standardize=TRUE)


graph_sem(model = fit_age_co, text_size = 3, layout = t(layout_age_de)) + 
  theme(panel.background = element_rect(fill = "white"))
# ggsave(here("03_summaries/plots/extra/sem_age_de.png"), width = 14, height = 10)
```

# Age exploration

Let's try a model that adds log age instead of / as well as age. 

```{r}
scores_wide_mat$log_age <- log(scores_wide_mat$age)
# cfa_age_model <-  "
# # measurement
# reasoning =~ matrix_reasoning + mental_rotation 
# ef =~ hearts_and_flowers + memory_game  + same_different_selection
# social =~ theory_of_mind 
# language =~ trog + vocab + sre + swr
# math =~ egma_math
# 
# # age regressions
# reasoning ~ age + log_age
# ef ~ age + log_age
# social ~ age + log_age
# language ~ age + log_age
# math ~ age + log_age
# "

# fit <- sem(cfa_age_model, scores_wide_mat, std.lv=TRUE, missing='fiml')
# summary(fit, fit.measures=TRUE, standardize=TRUE)
# 
# layout = matrix(nrow=4, ncol = 14, 
#                 data = c(NA,NA,NA,NA, NA,NA,"log_age", "age", NA,NA,NA,NA, NA, NA,
#                          NA,NA,NA,NA, NA,NA,NA,NA, NA,NA,NA,NA, NA, NA,
#                          "reasoning",NA, "ef", NA, NA, NA, "social",NA, NA, "language",NA, NA, NA, 
#                          "math",
#                          "matrix_reasoning", "mental_rotation", "hearts_and_flowers","memory_game","mefs", "same_different_selection",  "theory_of_mind","hostile_attribution","emotion_reasoning","trog","vocab","sre_es","swr_es","egma_math"), byrow = TRUE)
# 
# graph_sem(model = fit, text_size = 3, layout = t(layout))
```

Median split on age

```{r}
cfa_model <-  "
reasoning =~ matrix + mrot 
ef =~ hf + mg + sds + mefs
social =~ ha + tom
language =~ trog + vocab + sre + swr + pa
maths =~ math
"

# fit <- cfa(cfa_model, scores_wide_mat, std.lv=TRUE, missing='fiml')
# summary(fit, fit.measures=TRUE, standardize=TRUE)
```


```{r}
fit_younger <- cfa(cfa_model, data = filter(scores_wide_mat, age < 9),
                   std.lv=TRUE, missing='fiml')
fit_older <- cfa(cfa_model, data = filter(scores_wide_mat, age >= 9),
                 std.lv=TRUE, missing='fiml')
summary(fit_younger, fit.measures=TRUE, standardize=TRUE)
summary(fit_older, fit.measures=TRUE, standardize=TRUE)

graph_sem(model = fit_younger, text_size = 3, layout = t(layout))
ggsave(here("03_summaries/plots/sem_younger.png"), width = 14, height = 10)
graph_sem(model = fit_older, text_size = 3, layout = t(layout))
ggsave(here("03_summaries/plots/sem_older.png"), width = 14, height = 10)
```
