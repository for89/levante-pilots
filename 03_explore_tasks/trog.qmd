---
title: "LEVANTE Trog"
author: "Fionnuala O'Reilly"
toc: true
number-sections: true
highlight-style: pygments
format:
  html: 
    code-fold: true
---

```{r}
library(tidyverse)
library(glue)
library(here)

source(here("02_score_data","irt_helpers.R"))
source(here("03_summaries", "plotting_helper.R"))
source(here("03_explore_tasks/explore_helper.R"))
```

Get trog data

```{r}
trog <- load_task_data("trog")
invisible(trog)
```

Exploring item types

```{r}
base::table(trog$item_group)
sort(unique(trog$item_group))

# Dupicate of 'post modified subject - update
trog <- trog |>
  mutate(item_group = case_when(
    item_group == "post modified subject" ~ "postmodified subject",
    TRUE ~ item_group
  ))

sort(unique(trog$item_group))
sort(unique(trog$item_uid))
length(unique(trog$item_uid)) # must be using Trog2 (2003 version) as Trog1 only has 80 items

```

Get the sum scores

```{r}

colnames(trog)

trog_runs <- trog |>
  group_by(site, user_id, run_id) |>
  summarise(
    correct = mean(correct, na.rm = TRUE),  
    age = mean(age, na.rm = TRUE),          
    n_items = n_distinct(item_uid) # how many unique items were completed
  )

ggplot(trog_runs, aes(x = age, y = correct)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "loess") +
  theme_minimal(base_family = "sans") +
  ylim(0, 1) +
  facet_wrap(~site)

```

Item completion patterns across countries

```{r}

ggplot(trog_runs, aes(x = n_items)) +
  geom_histogram(binwidth = 1) +
  theme_minimal(base_family = "sans") +
  facet_wrap(~site)

```
Examining by item group

```{r}

trog_type <- trog |>
  group_by(site, user_id, run_id, item_group) |>
  summarise(correct = mean(correct, na.rm = TRUE),
            age = mean(age, na.rm = TRUE))

ggplot(trog_type, aes(x = age, y = correct, col = item_group)) +
  geom_smooth(method = "loess") +
  theme_minimal(base_family = "sans") +
  facet_wrap(~site)

```
Grouping items by grammatical structure

```{r}

unique(trog$item_group)

trog_grouped <- trog |>
  mutate(grammar_group = case_when(
    item_group %in% c(
      "noun", "verb", "adjective", 
      "pluralmorph", "pluralpronoun"
    ) ~ "basic_grammar",

    item_group %in% c(
      "2combo", "3combo", "prepphrase", "additive",
      "inon", "abovebelow", "comparative"
    ) ~ "simple_constructions",

    item_group %in% c(
      "revactive", "revpassive",
      "negative", "temporal", "causal", "conditional"
    ) ~ "basic_sentences",

    item_group %in% c(
      "relclause", "embedding",
      "depclause", "postmod", "gerund"
    ) ~ "complex_sentences",

    item_group %in% c(
      "disjunctive", "neither", "notonly", "xnoty"
    ) ~ "logical_structures",

    item_group == "stimulus" ~ "stimulus"
  ))

trog_grouped |>
  count(grammar_group)

trog_blocks <- trog_grouped |>
  group_by(site, user_id, run_id, grammar_group) |>
  summarise(
    correct = ifelse(all(is.na(correct)), NA_real_, mean(correct, na.rm = TRUE)),
    age = mean(age, na.rm = TRUE),
    .groups = "drop"
  ) |>
  filter(!is.na(grammar_group))

ggplot(trog_blocks, aes(x = age, y = correct)) + 
  geom_point(aes(alpha = !is.na(correct)), size = 1) +
  scale_alpha_discrete(guide = "none") +
  geom_smooth(data = trog_blocks |> filter(!is.na(correct)), method = "loess", se = TRUE, colour = "blue") +
  geom_hline(yintercept = 0.5, lty = 2, colour = "black") + 
  ylim(0, 1) +
  theme_minimal(base_family = "sans") +
  facet_grid(site ~ grammar_group)

```

Difficulty patterns across sites

```{r}

item_difficulty <- trog |>
  group_by(site, item_uid) |>
  summarise(p_correct = mean(correct, na.rm = TRUE)) |>
  pivot_wider(names_from = site, values_from = p_correct)

library(GGally)
item_difficulty |>
  select(-item_uid) |>
  ggpairs(title = "Pairwise Site-Level Item Difficulties") +
  theme_minimal(base_family = "sans")

```

Load results from IRT model

```{r}
best_multigroup <- readRDS(here("02_scoring_outputs", "irt_outputs", "multigroup_best_outputs.rds"))
multigroup_scores <- readRDS(here("02_scoring_outputs", "scores", "scores_multigroup.rds"))

```

Multigroup models

Developmental trends in trog ability estimates by site

This plot shows how IRT-derived ability estimates (theta scores, i.e. estimated latent ability) from the TROG task vary with age across different sites.
```{r}
# Theta scores (computed per person, per task, per site), plotted against age

multigroup_scores_trog <- multigroup_scores |>
  filter(task_id == "trog") |>
  select(site, task_id, user_id, run_id, metric_type, metric_value) |>
  left_join(run_ages) # not working

ggplot(multigroup_scores_trog, aes(x = age, y = metric_value, col = site)) + 
  geom_point() + 
  theme_minimal(base_family = "sans") +
  geom_smooth()

```

Organizing trog items into difficulty-based blocks using IRT parameters

```{r}

# Pull item level IRT parameters for trog
trog_models <- best_multigroup$coefs[[which(best_multigroup$task_id == "trog")]]

# Keep only rows where the item ID starts with "trog_"
trog_coefs <- trog_models |> 
  filter(str_detect(item, "^trog_"))  

# Calculate mean difficulty (d) per item across sites. Averages the difficulty parameter d across sites for each item (may be problematic)
trog_difficulty_overall <- trog_coefs |>
  group_by(item) |>
  summarise(mean_d = mean(d, na.rm = TRUE), .groups = "drop") |>
  arrange(mean_d)

# Assign block numbers (4 items per block, 25 blocks total) 
trog_difficulty_blocks <- trog_difficulty_overall |>
  mutate(block = ceiling(row_number() / 4))

# Join block info back into full site-level IRT data
trog_difficulty <- trog_coefs |>
  left_join(trog_difficulty_blocks |> select(item, mean_d, block), by = "item")

# Check
invisible(trog_difficulty |> count(block))

```

IRT-estimated mean d for each item, averaged across sites

```{r}

ggplot(trog_difficulty_blocks, aes(x = reorder(item, mean_d), y = mean_d)) +
  geom_point() +
  coord_flip() +
  labs(
    x = "Item (ordered by mean difficulty)",
    y = "Mean Difficulty (d)",
    title = "TROG Item Difficulty (Mean Across Sites)"
  ) +
  theme_minimal() +
  theme(axis.text.y = element_text(size = 6))

```

