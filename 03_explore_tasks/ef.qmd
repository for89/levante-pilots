---
title: "LEVANTE EF Tasks - Interim Report"
author: "Mike Frank"
toc: true
number-sections: true
highlight-style: pygments
format:
  html: 
    code-fold: true
editor_options: 
  chunk_output_type: inline
---


Required packages

```{r}

#| echo: false

library(tidyverse)
library(glue)
library(here)
library(viridis)
library(quarto)
library(ggrepel)
library(lubridate)
library(janitor)
library(lavaan)
library(tidySEM)
```

Helper functions

```{r}
#| echo: false

source(here("02_score_data","irt_helpers.R"))
source(here::here("plot_settings.R"))
source(here("03_explore_tasks/explore_helper.R"))

```

Get EF data

```{r}
ef <- load_task_data(c("hf","sds","mg"))
runs <- read_rds(here(glue("01_fetched_data/run_data.rds"))) |>
  filter(task_id %in% c("hearts-and-flowers","memory-game","same-different-selection")) 

# age missing from 108 co_pilot Ss
ef |> filter(is.na(age)) |> distinct(user_id, site)

ef
```

Load multigroup models

```{r}
best_multigroup <- readRDS(here("02_scoring_outputs", "irt_outputs", "multigroup_best_models.rds"))
multigroup_scores <- readRDS(here("02_scoring_outputs", "scores", "multigroup_scores_rescored.rds"))

best_multigroup_coefs <- best_multigroup |>
  select(item_task, item_type, invariance_type, coefs) |>
  unnest(coefs)
```

First plot sumscores

```{r}
ef_runs <- ef |>
  filter(site != "us_pilot") |>
  group_by(site, user_id, run_id, task_id) |>
  summarise(
    correct = mean(correct),
    age = mean(age),
    .groups = "drop"
  )

ef_sum_scores <- ggplot(ef_runs, aes(x = age, y = correct)) + 
  geom_point(alpha = .5) + 
  geom_smooth(method = "loess", lambda = 1) +
  facet_grid(site ~ task_id) + 
  ylim(0,1) +
  labs(
    title = "Age-related accuracy, smoothed trends by site",
    x = "Age (years)",
    y = "Proportion correct",
    caption = "Note: Each point represents a participant run; smoothed trend by site"
  )

print(ef_sum_scores)

ggsave(
  filename = here::here("03_explore_tasks", "Graphs", "ef_sum_scores.png"),
  plot = ef_sum_scores,
  width = 10,
  height = 6,
  dpi = 300
)
```

Now go to task analysis. 

# Hearts and Flowers

Zoom in on HF. 

```{r}
hf <- ef |>
  filter(task_id == "hearts-and-flowers") 
```

Look at all phases. 

## Sumscore

```{r}
hf_blocks <- hf |>
  filter(site != "us_pilot") |>
  group_by(site, user_id, run_id, task_id, item_group) |>
  summarise(correct = mean(correct), 
            age = mean(age), 
            n = n())

ggplot(hf_blocks,
       aes(x = age, y = correct)) + 
  geom_point(alpha = .5) + 
  geom_smooth(method = "glm", method.args = list(family = "binomial")) +
  geom_hline(yintercept = .5, lty = 2) + 
  ylim(0,1) + 
  facet_grid(site ~ item_group)
```

F notes that there are a lot of younger kids BELOW chance. Let's see if they are missing data. 

```{r}
ggplot(hf_blocks, aes(x = n, y = correct)) + 
  geom_point() + 
  geom_smooth(method = "lm") + 
  facet_grid(site ~ item_group)
```


NO - this is not because of missing data. Something else is happening. 

```{r}
hf_runs <- hf |>
  filter(site != "us_pilot") |>
  group_by(site, user_id, run_id, task_id) |>
  summarise(correct_rt = mean(as.numeric(rt[correct]), na.rm=TRUE),
            correct = mean(correct),
            age = mean(age))
```

Histograms. 

```{r}
ggplot(filter(ef_runs, task_id == "hearts-and-flowers") |>
         mutate(age_group = cut(age, c(5, 7, 9, 11, 13, include.lowest=TRUE))) |>
         filter(!is.na(age_group)),
       aes(x = correct)) + 
  geom_histogram(binwidth = .25) +
  geom_vline(xintercept = .5, lty = 2) +
  scale_x_continuous(breaks = c(0,.25, .5, .75, 1)) + 
  facet_grid(site ~ age_group)
```

```{r}
hf_it <- hf |>
  filter(site != "us_pilot") |>
  group_by(site, user_id, run_id, task_id, item_group, item, age) |>
  summarise(correct = mean(correct), 
            #rt = mean(rt_numeric, na.rm=T), 
            age = mean(age), 
            n = n())
#mutate(age_group = cut(age, breaks = seq(12, 60, by = 6)))

summary(lm(correct ~ item * item_group + site, data=hf_it))


hf_it |>
  ggplot(aes(x = item_group, y = correct, group = interaction(user_id, run_id), color = age)) +
  geom_point(alpha = 0.1) + geom_line(alpha = 0.1) +
  facet_grid(site ~ ., scales = "free_x") +
  labs(title = "Item Accuracy by Group, Site, and Age",
       x = "Item Group", y = "Accuracy") +
  theme_minimal()
```

Reaction time. 

```{r}
ggplot(hf_runs,
       aes(x = age, y = correct_rt)) + 
  geom_point(alpha = .5) + 
  geom_smooth(method = "lm") +
  geom_hline(yintercept = 0, lty = 2) + 
  facet_grid(site ~ task_id)
```

```{r}

hf_it <- hf |>
  filter(site != "us_pilot") |>
  group_by(site, user_id, run_id, task_id, item_group, item) |>
  summarise(correct_rt = median(as.numeric(rt[correct]), na.rm=TRUE),
            correct = mean(correct),
            age = mean(age)) 

hf_it |> ggplot(aes(x = age, y = correct_rt, color = item)) + 
  geom_point(alpha = .1) + 
  geom_smooth(method = "lm") +
  geom_hline(yintercept = 0, lty = 2) + 
  facet_grid(site ~ item_group)

hf_it |>
  ggplot(aes(x = correct, y = correct_rt, color = item)) + 
  geom_point(alpha = .1) + 
  geom_smooth(method = "lm") +
  geom_hline(yintercept = 0, lty = 2) + 
  facet_grid(site ~ item_group)
```

```{r}
ggplot(hf, aes(x = as.numeric(rt))) + 
  geom_histogram() + 
  scale_x_log10(breaks = c(100,200, 500,1000,2000,3000,5000,10000)) + coord_flip()
```


## IRT

We now use the multigroup IRT models. 

```{r}
run_ages <- ef |>
  filter(site != "us_pilot") |>
  select(site, run_id, user_id, age) |>
  distinct()

multigroup_scores_hf <- multigroup_scores |>
  filter(item_task == "hf") |>
  select(site, item_task, user_id, run_id, metric_type, metric_value ) |>
  left_join(run_ages)

ef_irt <- ggplot(multigroup_scores_hf, aes(x = age, y = metric_value, col = site)) + 
  geom_point() + 
  geom_smooth() +
  labs(
    title = "Developmental trends in Hearts & Flowers by site",
    x = "Age (years)",
    y = "Ability (IRT Score)",
    colour = "Site"
  )
print(ef_irt)

ggsave(
  filename = here::here("03_explore_tasks", "Graphs", "hf_irt.png"),
  plot = ef_irt,
  width = 6,
  height = 4,
  dpi = 300
)
```

Look at coefficients. 

Hearts and flowers - IRT scores by trial type

```{r}
# Hearts and flowers - IRT scores by trial type
hf_coefs <- filter(best_multigroup, item_task == "hf")$coefs[[1]] |>
  separate(item, sep = "_", into = c("task","block","trial", "number")) |>
  select(-number) |>
  distinct()

hf_trial_type <- ggplot(hf_coefs, aes(x = a1, y = -d, col = block, pch = trial)) +
  geom_point() +
  geom_text_repel(aes(label = trial)) +
  xlab("Slope") +
  ylab("Difficulty") +
  facet_wrap(~site)+
  labs(title = "Hearts and Flowers: Item difficulty by block and trial type")

print(hf_trial_type)

ggsave(
  filename = here::here("03_explore_tasks", "Graphs", "hf_trial_type.png"),
  plot = hf_trial_type,
  width = 6,
  height = 4,
  dpi = 300
)
```

# Memory game

```{r}
mg <- ef |>
  filter(item_task == "mg") |>
  separate(item_uid , into = c("task", "direction", "size", "span"), sep = "_") |>
  mutate(span = as.numeric(str_replace(span, "len",""))) |>
  group_by(run_id, direction) |>
  mutate(max_span = max(span))
```

## Sumscore

```{r}
mg_spans <- mg |>
  filter(site != "us_pilot") |>
  group_by(site, span, size, direction) |>
  summarise(n = n(), 
            correct = mean(correct, na.rm = TRUE))

mg_span_raw <- ggplot(mg_spans, aes(x = span, y = correct, col = direction, pch = size)) + 
  geom_point(aes(size = n)) + 
  geom_line(aes(lty = size)) + 
  facet_wrap(~site) +
  labs(
    title = "Memory Game: Raw accuracy by span length, direction, and grid size",
    x = "Span length",
    y = "Proportion correct"
  )

print(mg_span_raw)

ggsave(
  filename = here::here("03_explore_tasks", "Graphs", "mg_span_raw.png"),
  plot = mg_span_raw,
  width = 10,
  height = 6,
  dpi = 300
)

```

```{r}
mg |>
  filter(direction == "forward", span > 1, site != "us_pilot") |>
  mutate(age_rounded = as_factor(round(age))) |>
  group_by(age_rounded, span) |>
  summarise(correct = mean(correct), 
            n = n()) |>
  ggplot(aes(x = span, y = correct, col = age_rounded)) + 
  geom_point(aes(size = n)) + 
  geom_smooth(method = "lm", se =FALSE)

```



```{r}
mg_runs <- mg |>
  filter(correct) |>
  group_by(site, user_id, run_id, direction) |>
  summarise(max_span = max(span), 
            age = mean(age))
```


```{r}
ggplot(mg_runs, aes(x = age, y = max_span, col = direction)) + 
  geom_jitter(alpha = .5, height = .1, width = 0) + 
  geom_smooth(method = "lm")+ 
  facet_grid(direction~site, scales = "free_y")
```

## IRT

We now use the multigroup IRT models. 

```{r}
multigroup_scores_mg <- multigroup_scores |>
  filter(item_task == "mg", site != "us_pilot") |>
  select(site, item_task, user_id, run_id, metric_type, metric_value ) |>
  left_join(run_ages)

mg_span_irt<- ggplot(multigroup_scores_mg, aes(x = age, y = metric_value, col = site)) + 
  geom_point() + 
  geom_smooth() +
  labs(
    title = "Developmental trends in Memory Game by site",
    x = "Age (years)",
    y = "Ability (IRT Score)",
    colour = "Site"
  )

print(mg_span_irt)

ggsave(
  filename = here::here("03_explore_tasks", "Graphs", "mg_span_irt.png"),
  plot = mg_span_irt,
  width = 6,
  height = 4,
  dpi = 300
)

```

Look at coefficients. 

```{r}
mg_coefs <- best_multigroup_coefs |>
  filter(item_task == "mg",) |>
  separate(item, sep = "_", into = c("task", "direction", "size", "span", "number")) |>
  mutate(span = as.numeric(str_replace(span, "len", ""))) |>
  select(-task, -number) |>
  distinct()

mg_spans_irt <- mg_coefs |>
  group_by(site, span, size, direction) |>
  summarise(mean_difficulty = mean(d, na.rm = TRUE), .groups = "drop")

# Plot
mg_span_irt <- ggplot(mg_spans_irt, aes(x = span, y = -mean_difficulty, col = direction, pch = size)) +
  geom_point(size = 3) +
  geom_line(aes(lty = size)) +
  facet_wrap(~site) +
  labs(
    title = "Memory Game: IRT difficulty by span length, direction, and grid size",
    x = "Span length",
    y = "IRT difficulty (flipped)",
    colour = "Direction",
    shape = "Grid size",
    linetype = "Grid size"
  )

print(mg_span_irt)
ggsave(
  filename = here::here("03_explore_tasks", "Graphs", "mg_span_irt.png"),
  plot = mg_span_irt,
  width = 10,
  height = 6,
  dpi = 300
)
```

Note that we have used grid3 very little and so it's getting dropped from most analysis. 


# SDS


## Sumscore

```{r diagnostic-plot}
# the sequentialStimulus=false bug (affecting English variant only) was fixed Feb 21
# when was the bug introduced? plot accuracy by site over time
require(lubridate)

sds_date <- sds |> 
  mutate(date = as.Date(sapply(strsplit(as.character(timestamp), " "), `[`, 1)),
         week = floor_date(date, unit = "week"))

# spot-check a few kids in CO
sds_date |> filter(site=="co_pilot") |> select(date, user_id) |> distinct(user_id, date)

sds_date |>
  group_by(site, week, item_group, item) |>
  summarise(
    correct = mean(correct, na.rm = TRUE),
    n_users = n_distinct(user_id),
    .groups = "drop"
  ) |>
  ggplot(aes(x = week, y = correct, color = item)) +
  facet_grid(item_group ~ site) + 
  geom_line() + geom_point(aes(size = n_users), alpha = 0.6) +
  labs(title = "Weekly accuracy on, by item and block",
       x = "Week", y = "Mean Accuracy", size = "Unique Users") +
  theme_minimal()

```




```{r}
sds_runs <- sds |>
  group_by(site, user_id, run_id, task_id) |>
  summarise(correct = mean(correct), 
            age = mean(age))

sds_runs_block <- sds |>
  filter(item_group != "3unique") |>
  group_by(site, user_id, run_id, task_id, item, item_group) |>
  summarise(correct = mean(correct), 
            age = mean(age))

ggplot(sds_runs_block, aes(x = age, y = correct, col = item)) + 
  geom_point(alpha = .5) + 
  geom_smooth(method = "lm", se=FALSE) + 
  facet_grid(site ~ item_group)
```

## IRT

```{r}
multigroup_scores_sds <- multigroup_scores |>
  filter(item_task == "sds", site != "us_pilot") |>
  select(site, item_task, user_id, run_id, metric_type, metric_value ) |>
  left_join(sds_runs)

ggplot(multigroup_scores_sds, aes(x = age, y = metric_value, col = site)) + 
  geom_point() + 
  geom_smooth() +
 labs(
    title = "SDS: IRT difficulty",
    x = "Age",
    y = "Ability",
    colour = "Site",
  )

ggsave(
  filename = here::here("03_explore_tasks", "Graphs", "sds_irt.png"),
  width = 6,
  height = 4,
  dpi = 300
)
```
Look at coefficients. 

```{r}

#05.05.2025
sds_coefs <- best_multigroup_coefs |>
  filter(item_task == "sds", site != "us_pilot") |>
  separate(item, sep = "_", into = c("task", "block", "trial", "number")) |>
  filter(block != "3unique") |>
  mutate(block = fct_relevel(block, "dimensions", "same")) |>
  distinct()

# Label missing trials as 'same' and classify trial type
sds_coefs_clean <- sds_coefs |>
  mutate(
    trial = if_else(trial == "", "same", trial),
    trial_type = case_when(
      str_detect(trial, "choice") ~ "choice-based",
      TRUE ~ "feature-based"
    )
  )

# Plot: All trials
ggplot(sds_coefs_clean, aes(x = block, y = -d, colour = trial)) +
  facet_wrap(~site) +
  geom_point() + 
  geom_line(aes(group = trial)) + 
  coord_flip() +
  labs(
    title = "Same-Different Selection: IRT difficulty by block and trial type",
    x = "Block",
    y = "IRT difficulty (flipped)",
    colour = "Trial type"
  )

ggsave(
  filename = here::here("03_explore_tasks", "Graphs", "sds_coefs.png"),
  width = 6,
  height = 4,
  dpi = 300
)
```


# EF factor analysis

## Only LEVANTE tasks


```{r}
ef_scores <- filter(multigroup_scores, 
                    item_task %in% c("hf", "mg", "sds"))


ef_scores_filtered <- ef_scores |>
  group_by(site, item_task, user_id) |>
  left_join(runs) |>
  filter(completed == TRUE, valid_run == TRUE) |> # be very conservative on validation
  group_by(user_id, item_task) |>
  arrange(age) |>
  mutate(run_num = row_number(), 
         delta_age = ifelse(is.na(age), 0, age - age[1]),
         wave_id = ifelse(delta_age > .1, 2, 1)) |>
  group_by(user_id, site, wave_id, item_task) |>
  arrange(run_num) |>
  filter(run_num == min(run_num))  # remove repeated tasks within wave

ef_run_ages <- ef_scores_filtered |>
  group_by(user_id, wave_id) |>
  summarise(age = mean(age, na.rm=TRUE))


ef_scores_wide <- ef_scores_filtered |>
  select(site, user_id, wave_id, item_task, metric_value) |>
  pivot_wider(names_from = "item_task", values_from = "metric_value", 
              id_cols = c("user_id", "site", "wave_id")) |>
  janitor:::clean_names() |>
  ungroup() |>
  mutate(across(hf:sds, \(x) scale(x)[,1])) |>
  left_join(ef_run_ages)
  

#          ca_site = site == "ca_pilot",
#          de_site = site == "de_pilot") 
```

```{r}
cfa_model <-  "
ef =~ hf + mg + sds
ef ~ age
"

fit <- cfa(cfa_model, ef_scores_wide, std.lv=TRUE, missing='fiml')
summary(fit, fit.measures=TRUE, standardize=TRUE)

graph_sem(model = fit, text_size = 3) + 
  theme(panel.background = element_rect(fill = "white"))
```

Multi-group model

```{r}
# configural invariance
fit1 <- cfa(cfa_model, ef_scores_wide, std.lv=TRUE, missing='fiml', 
            group = "site")

# weak invariance
fit2 <- cfa(cfa_model, ef_scores_wide, std.lv=TRUE, missing='fiml', 
            group = "site", group.equal = "loadings")

# strong invariance
fit3 <- cfa(cfa_model, ef_scores_wide, std.lv=TRUE, missing='fiml', 
            group = "site", group.equal = c("intercepts","loadings"))

# model comparison tests
lavTestLRT(fit1, fit2, fit3)
```

```{r}
graph_sem(model = fit1, text_size = 3) + 
  theme(panel.background = element_rect(fill = "white"))
```

## Add MEFS

Note that the MEFS data file appears to have the column names reversed, based on the observation that standard scores have mean 50 and don't change with age. 

```{r}
mefs_scores <- read_csv(here("02_scoring_outputs","mefs_data","LEVANTE_20250403_1132.csv")) |>
  janitor::clean_names() |>
  select(child_id, a1_total_score, a1_standard_score) |>
  rename(user_id = child_id, 
         mefs_total_raw = a1_total_score,
         mefs_standard_raw = a1_standard_score
  ) 

ef_scores_wide_mefs <- ef_scores_wide |>
  ungroup() |>
  left_join(mutate(mefs_scores, wave_id = 1)) |>
  mutate(mefs_standard = scale(mefs_total_raw)[,1],
         mefs_total = scale(mefs_standard_raw)[,1])

```


Plot MEFS.

```{r}
ggplot(ef_scores_wide_mefs, aes(x = age, y = mefs_standard_raw)) +
  geom_point() + 
  geom_smooth(method = "lm") +
  facet_wrap(~ site) +
  labs(
    title = "MEFS total score by age",
    x = "Age (years)",
    y = "MEFS total score"
  )
```


```{r}
ggplot(ef_scores_wide_mefs, aes(x = age, y = mefs_total_raw)) +
  geom_point() + 
  geom_smooth(method = "lm") +
  facet_wrap(~site) + 
  geom_hline(yintercept = 50, lty = 2) +
  labs(
    title = "MEFS standard score by age",
    x = "Age (years)",
    y = "MEFS standard score"
  )
```

```{r}
cfa_model_mefs <-  "
ef =~ hf + mg + sds + mefs_total
ef ~ age
"

fit <- cfa(cfa_model_mefs, ef_scores_wide_mefs, std.lv=TRUE, missing='fiml')
summary(fit, fit.measures=TRUE, standardize=TRUE)

graph_sem(model = fit, text_size = 3) + 
  theme(panel.background = element_rect(fill = "white"))
```


```{r}
# configural invariance
fit1 <- cfa(cfa_model_mefs, ef_scores_wide_mefs, std.lv=TRUE, missing='fiml', 
            group = "site")

# weak invariance
fit2 <- cfa(cfa_model_mefs, ef_scores_wide_mefs, std.lv=TRUE, missing='fiml', 
            group = "site", group.equal = "loadings")

# strong invariance
fit3 <- cfa(cfa_model_mefs, ef_scores_wide_mefs, std.lv=TRUE, missing='fiml', 
            group = "site", group.equal = c("intercepts","loadings"))

# model comparison tests
lavTestLRT(fit1, fit2, fit3)
```


```{r}
graph_sem(model = fit1, text_size = 3) + 
  theme(panel.background = element_rect(fill = "white"))
```


# Simple correlations with age

```{r}
ef_scores_wide_mefs |>
  # select(user_id, site, age, hf, mg, sds, mefs_standard) |>
  filter(wave_id == 1) |>
  pivot_longer(cols = c(hf, mg, sds, mefs_total), 
               names_to = "task", values_to = "score") |>
  group_by(task, site) |>
  summarise(cor = cor.test(score, age, na.rm = TRUE)$estimate) |>
  pivot_wider(names_from = "task", values_from = "cor") |>
  knitr::kable(digits = 2)

```

