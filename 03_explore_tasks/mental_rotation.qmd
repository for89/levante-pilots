---
title: "Mental Rotation Analysis"
format: html
execute:
  echo: false       
  warning: false    
  message: false    
  cache: false
  knitr: 
    opts_chunk: 
      results: "hide"      
---

```{r}
library("tidyverse")
library("glue")
library("here")
```

```{r helper functions}
#| echo: false
source(here::here("plot_settings.R"))
source(here("03_explore_tasks/explore_helper.R"))
```

```{r load irt data}
site_labels <- c("uniandes-co" = "pilot_uniandes_co",
                 "mpieva-de" = "pilot_mpieva_de",
                 "western-ca" = "pilot_western_ca")

site_map <- tibble::tibble(
  site       = names(site_labels),
  site_label = unname(site_labels)
)

core_tasks   <- c("matrix","mrot","math","hf","mg","sds",
                  "trog","vocab","tom")

# Run data
run_data <- readr::read_rds(here::here("01_fetched_data/run_data.rds"))
#colnames(run_data)

# IRT data
all_scores <- readr::read_rds(here::here("02_scoring_outputs","scores","scores_combined.rds"))
# colnames(all_scores)
# table(all_scores$item_task)
# table(all_scores$metric_type)
```

## Sample size by site

```{r mrot counts}
all_sum_scores <- readr::read_rds(here::here("01_fetched_data","task_data_nested.rds"))
# colnames(all_sum_scores)
# glimpse(all_sum_scores$data[[1]])
# glimpse(all_sum_scores %>% filter(item_task == "mrot") %>% pull(data) %>% .[[1]])

mrot <- all_sum_scores %>%
  filter(item_task == "mrot") %>%
  select(site, language, data) %>%
  unnest(data) %>%
  filter(!is.na(correct)) %>%
  mutate(correct = as.numeric(correct))  

counts_site <- mrot %>%
  summarise(
    n_trials = dplyr::n(),
    n_users  = dplyr::n_distinct(user_id),
    n_runs   = dplyr::n_distinct(paste(user_id, run_id)),
    .by = site
  ) %>%
  arrange(site)

knitr::kable(
  counts_site,
  format  = "html",
  caption = "Mental Rotation: Counts by Site"
)
```

## Raw data
### (1) Ability - proportion correct

```{r proportion correct by age}
run_ages <- all_scores %>%
  filter(item_task == "mrot") %>%
  transmute(user_id, run_id, age = as.numeric(age)) %>%
  distinct()
# one age per user×run
stopifnot(!any(duplicated(run_ages[c("user_id","run_id")])))

# left join age, then summarise per run 
mrot_runs <- mrot %>%
  left_join(run_ages, by = c("user_id","run_id")) %>%
  group_by(site, user_id, run_id) %>%
  summarise(
    correct  = mean(correct, na.rm = TRUE),  
    age      = first(age),                    
    n_items  = n_distinct(item_uid),
    .groups  = "drop"
  )

# plot
mrot_sum_scores <- ggplot(mrot_runs, aes(x = age, y = correct)) +
  geom_point(alpha = 0.5, size = 1) +
  geom_smooth(method = "gam", formula = y ~ s(x, k = 4), se = FALSE) +
  coord_cartesian(ylim = c(0, 1)) +
  facet_wrap(~ site) +
  labs(
    title   = "Age-related accuracy, smoothed trends by site",
    x       = "Age (years)",
    y       = "Proportion correct",
    caption = "Each point = participant run; trend = GAM per site"
  )
mrot_sum_scores

#ggsave(
#  filename = here::here("03_explore_tasks", "Graphs", "mrot_sum_scores.png"),
#  plot = mrot_sum_scores,
#  width = 10,
#  height = 6,
#  dpi = 300
#)
```

### (2) Angle curves - graph 1

```{r angle curve_1}
mrot_items <- mrot |>
  mutate(
    stimulus = str_extract(item, "^[a-z]+"), 
    angle = as.integer(str_extract(item, "\\d+")) 
  ) |>
  filter(stimulus %in% c("duck", "rabbit", "shape")) |>
  group_by(site, stimulus, item_group, angle) |>
  summarise(correct = mean(correct, na.rm = TRUE), .groups = "drop") 

mrot_stimulus <- ggplot(mrot_items, aes(x = angle, y = correct, col = stimulus, lty = item_group)) + 
  geom_point(alpha = 0.5) + 
  geom_line() + 
  geom_vline(xintercept = 180, lty = 2) + 
  ylim(0, 1) +
  facet_grid(.~site) +
  labs(
    title = "Accuracy by rotation angle, stimulus type, and dimensionality",
    x = "Rotation angle (°)",
    y = "Proportion correct",
    colour = "Stimulus",
    lty = "Item type"
  ) 
mrot_stimulus

#ggsave(
#  filename = here::here("03_explore_tasks", "Graphs", "mrot_stimulus.png"),
#  plot = mrot_stimulus,
#  width = 8,
#  height = 4,
#  dpi = 300
#)
```

### (3) Angle curves - graph 2

```{r angle curve_2}
mrot_items <- mrot_items |>
  mutate(
    reflected_angle = if_else(angle > 180, 360 - angle, angle),
    is_reflected = angle > 180
  )

mrot_angle <- ggplot(mrot_items, aes(x = reflected_angle, y = correct, 
                       col = stimulus, lty = item_group)) + 
  geom_point(alpha = 0.5) + 
  geom_line(aes(group = interaction(stimulus, item_group, is_reflected))) + 
  ylim(0, 1) +
  facet_grid(stimulus ~ site) +
  labs(
    title = "Accuracy by rotation angle, stimulus, and dimensionality",
    x = "Reflected rotation angle (°)",
    y = "Proportion correct",
    colour = "Stimulus",
    lty = "Item Type"
  )
mrot_angle

#ggsave(
#  filename = here::here("03_explore_tasks", "Graphs", "mrot_angle.png"),
#  plot = mrot_angle,
#  width = 10,
#  height = 6,
#  dpi = 300
#)
```

## IRT estimates
### (4) Ability - thetas

```{r irt thetas by age}
mrot_df <- all_scores %>%
  filter(item_task == "mrot", metric_type == "ability") %>%
  mutate(
    age          = as.numeric(age),
    metric_value = as.numeric(metric_value),
    site_label   = dplyr::recode(site, !!!site_labels, .default = site)
  ) %>%
  filter(is.finite(age), is.finite(metric_value))

mrot_irt <- ggplot(mrot_df, aes(x = age, y = metric_value, colour = site_label)) +
  geom_point(alpha = 0.35, size = 1.1) +
  geom_smooth(method = "gam", formula = y ~ s(x, k = 5), se = TRUE) +
  labs(
    title = "Developmental trends in Mental Rotation ability by site",
    subtitle = "Ability estimates smoothed with GAM",
    x = "Age (years)",
    y = "Ability (theta)",
    colour = "Site"
  )
mrot_irt

#ggsave(
#  filename = here::here("03_explore_tasks", "Graphs", "mrot_irt.png"),
#  plot = mrot_irt,
#  width = 6,
#  height = 4,
#  dpi = 300
#)

```
### (5) Difficulty by rotation angle (2PL scalar)

```{r subset 2pl scalar item params}
coefs <- readr::read_rds(here::here("02_scoring_outputs","all_coefs.rds"))
# colnames(coefs)
# table(coefs$invariance)
# table(coefs$group)

# filter to mrot, 2PL, scalar; keep a and d
mrot_2pl_scalar <- coefs %>%
  filter(
    task == "mrot",
    invariance == "scalar",
    itemtype %in% c("2PL", "2pl")   # be tolerant of case
  ) %>%
  filter(group != "all") %>%
  transmute(
    site = dplyr::recode(group, !!!site_labels, .default = group),
    item,
    a = a1,   # discrimination
    d = d     # difficulty (see note on sign below)
  ) %>%
  distinct(site, item, .keep_all = TRUE)
# colnames(mrot_2pl_scalar)
```

```{r difficulty by angle, 2pl scalar}
mrot_diff_2pl <- mrot_2pl_scalar %>%
  filter(!is.na(d)) %>%
  tidyr::separate(
    item,
    into = c("prefix","item_group","stimulus","angle","version"),
    sep = "_",
    remove = FALSE,
    fill = "right"
  ) %>%
  mutate(
    angle = suppressWarnings(as.integer(angle))
  ) %>%
  filter(stimulus %in% c("duck","rabbit","shape")) %>%
  transmute(
    site, stimulus, item_group, angle,
    value = -d
  ) %>%
  distinct(site, stimulus, item_group, angle, value)

plot_mrot_diff_2pl <- ggplot(mrot_diff_2pl, aes(x = angle, y = value, col = stimulus)) + 
  geom_point() +
  geom_line(aes(group = stimulus)) + 
  xlab("Rotation angle (°)") + 
  ylab("IRT difficulty") + 
  facet_wrap(~site) +
  labs(
    title = "Item difficulty by rotation angle and stimulus type",
    subtitle = "IRT difficulty estimates (2PL scalar), higher = more difficult",
    colour = "Stimulus"
  ) 
plot_mrot_diff_2pl

```

### (6) Discrimination by rotation angle (2PL scalar)

```{r discrimination by angle}
# colnames(mrot_2pl_scalar)
mrot_discrim_2pl <- mrot_2pl_scalar %>%
  filter(!is.na(d)) %>%
  tidyr::separate(
    item,
    into = c("prefix","item_group","stimulus","angle","version"),
    sep = "_",
    remove = FALSE,
    fill = "right"
  ) %>%
  mutate(
    angle = suppressWarnings(as.integer(angle))
  ) %>%
  filter(stimulus %in% c("duck","rabbit","shape")) %>%
  transmute(
    site, stimulus, item_group, angle,
    value = a
  ) %>%
  distinct(site, stimulus, item_group, angle, value)

plot_2PL_discrim <- ggplot(mrot_discrim_2pl, aes(x = value, y = angle, col = stimulus, lty = item_group)) +
  geom_point() +
  geom_line(aes(group = interaction(stimulus, item_group))) +
  facet_wrap(~site) +
  scale_y_continuous(breaks = seq(0, 360, 60)) +
  labs(
    title = "Item Discrimination by rotation angle, stimulus, and dimensionality",
    subtitle = "IRT discrimination (2PL scalar), higher = more sensitive to ability",
    x = "Discrimination (a-parameter)",
    y = "Rotation Angle (°)",
    colour = "Stimulus",
    lty = "Item Type (2D vs 3D)"
  ) 
plot_2PL_discrim
```

## Reaction time (RT)

### (7) RT by age

```{r RT by age}
# raw data
# colnames(mrot)

mrot_rt_sum <- all_sum_scores %>%
  filter(item_task == "mrot") %>%
  select(site, language, data) %>%
  unnest(data) %>%
  mutate(
    correct = as.numeric(correct),
    rt_s    = as.numeric(rt_numeric) / 1000
  ) %>%
  filter(is.finite(rt_s), rt_s > 0) %>%
  mutate(log_rt = log(rt_s))

mrot_rt_runs <- mrot_rt_sum %>%
  left_join(run_ages, by = c("user_id","run_id")) %>%
  group_by(site, user_id, run_id) %>%
  summarise(
    # raw
    #rt_median   = median(rt_s[correct == 1], na.rm = TRUE),
    #rt_trimmed  = mean(rt_s[correct == 1], trim = 0.10, na.rm = TRUE),
    # log scale
    logrt_median  = median(log_rt[correct == 1], na.rm = TRUE),
    logrt_mean = mean(log_rt[correct == 1], na.rm = TRUE), #trim = 0.10 removed
    age = first(age),
    n_items = n_distinct(item_uid),
    .groups = "drop"
  )

mrot_rt_plot_log <- ggplot(mrot_rt_runs, aes(x = age, y = logrt_mean)) +
  geom_point(alpha = 0.5, size = 1) +
  geom_smooth(method = "gam", formula = y ~ s(x, k = 4), se = FALSE) +
  facet_wrap(~ site) +
  labs(
    title   = "Age-related reaction time (log scale), by site",
    subtitle= "Mean of log RT on correct trials; each point = participant run",
    x       = "Age (years)",
    y       = "log RT (seconds)"
  )

mrot_rt_plot_log
```

### (8) Accuracy by RT (raw scores)

```{r Proportion correct by RT}
mrot_prop_correct <- mrot_runs %>%
  select(site, user_id, run_id, correct, age) %>%
  inner_join(
    mrot_rt_runs %>% select(site, user_id, run_id, logrt_mean),
    by = c("site", "user_id", "run_id")
  )

# plot: accuracy vs log RT
ggplot(mrot_prop_correct, aes(x = logrt_mean, y = correct)) +
  geom_point(alpha = 0.5, size = 1) +
  geom_smooth(method = "lm", se = TRUE) +
  facet_wrap(~ site) +
  labs(
    title = "Accuracy vs log Reaction Time, by site",
    subtitle = "Each point = participant run (mean RT vs mean accuracy)",
    x = "log RT (seconds)",
    y = "Proportion correct",
    caption = "Linear fit per site"
  )
```

### (9) Accuracy by RT (raw scores) and age

```{r}
ggplot(mrot_prop_correct, aes(x = logrt_mean, y = correct, colour = age)) +
  geom_point(alpha = 0.5, size = 1.5) +
  geom_smooth(method = "lm", se = TRUE, colour = "grey") +
  facet_wrap(~ site) +
  scale_colour_viridis_c() +
  labs(
    title = "Accuracy vs Mean log RT, colored by age",
    subtitle = "Each point = participant run; line = linear fit per site",
    x = "log RT (seconds)", y = "Proportion correct", colour = "Age (y)"
  )

```
### (10) Accuracy by RT (IRT scores)

```{r Ability (thetas) by RT}
ability_runs <- all_scores %>% 
  filter(item_task == "mrot", metric_type == "ability") %>%
  select(site, user_id, run_id, ability = metric_value, age) %>%
  group_by(site, user_id, run_id) %>%               
  summarise(ability = mean(ability, na.rm = TRUE),
            age = first(age),
            .groups = "drop")

# join with your RT summary 
mrot_speed_ability <- ability_runs %>%
  inner_join(
    mrot_rt_runs %>% select(site, user_id, run_id, logrt_mean),
    by = c("site", "user_id", "run_id")
  )

# plot
p_irt_accuracy <- ggplot(mrot_speed_ability, aes(x = logrt_mean, y = ability)) +
  geom_point(alpha = 0.6, size = 1) +
  geom_smooth(method = "lm", se = TRUE) +
  facet_wrap(~ site) +
  labs(
    title = "IRT Ability (Thetas) vs log RT, by site",
    subtitle = "Each point = participant run",
    x = "log RT (seconds)",
    y = "Ability (IRT theta)"
  ) 
p_irt_accuracy
```

### (11) Accuracy by RT (IRT scores) and age

```{r}
p_irt_age_color <- ggplot(mrot_speed_ability,
                          aes(x = logrt_mean, y = ability, colour = age)) +
  geom_point(alpha = 0.55, size = 1) +
  geom_smooth(method = "lm", se = TRUE, colour = "grey") +
  facet_wrap(~ site) +
  scale_colour_viridis_c() +
  labs(
    title = "IRT Ability (Thetas) vs log RT, by site, colored by age",
    subtitle = "Each point = participant run; line = linear fit per site",
    x = "log RT (s)", y = "IRT Ability (Thetas)", color = "Age (y)"
  )
p_irt_age_color
```

### (12) Trial type by RT

```{r Trial type by RT}
# trial-level RTs (log seconds)
mrot_rt_trial <- mrot %>%
  filter(!is.na(rt_numeric), is.finite(rt_numeric)) %>%
  mutate(
    rt_s    = as.numeric(rt_numeric) / 1000,  
    correct = as.numeric(correct)
  ) %>%
  filter(rt_s >= 0.2, rt_s <= 10) %>%         
  mutate(log_rt = log(rt_s))                  

# parse trial type and summarise 
mrot_items_rt_sum <- mrot_rt_trial %>%
  mutate(
    stimulus = stringr::str_extract(item, "^[a-z]+"),
    angle    = as.integer(stringr::str_extract(item, "\\d+"))
  ) %>%
  filter(stimulus %in% c("duck", "rabbit", "shape"), !is.na(angle)) %>%
  group_by(site, stimulus, item_group, angle) %>%
  summarise(
    logrt_median_correct  = median(log_rt[correct == 1], na.rm = TRUE),
    logrt_mean_correct = mean(log_rt[correct == 1], na.rm = TRUE), #trim = 0.10 removed
    n_trials   = n(),
    n_correct  = sum(correct == 1, na.rm = TRUE),
    .groups = "drop"
  )

# plot
p_rt_by_trialtype <- ggplot(
  mrot_items_rt_sum,
  aes(x = angle, y = logrt_median_correct,
      group = interaction(item_group, stimulus),
      colour = stimulus)
) +
  geom_line(alpha = 0.35) +
  geom_point(alpha = 0.6, size = 1) +
  facet_wrap(~ site) +
  labs(
    title    = "Mental Rotation: log Reaction Time by trial type",
    subtitle = "Median log RT on correct trials",
    x        = "Rotation angle (°)",
    y        = "log RT (seconds)",
    colour   = "Stimulus"
  )
p_rt_by_trialtype
```

### (13) Rotation angle by RT (second graph)

```{r angle by RT}
# reflect angles
mrot_items_rt_ref <- mrot_items_rt_sum %>%
  mutate(
    reflected_angle = if_else(angle > 180L, 360L - angle, angle),
    is_reflected    = angle > 180L
  )

# plot reflected data on log RT
mrot_rt_angle <- ggplot(
  mrot_items_rt_ref,
  aes(x = reflected_angle, y = logrt_median_correct,
      colour = stimulus, linetype = item_group)
) +
  geom_point(alpha = 0.6) +
  geom_line(aes(group = interaction(stimulus, item_group, is_reflected))) +
  facet_grid(stimulus ~ site) +
  labs(
    title    = "log Reaction Time by reflected angle, stimulus, and dimensionality",
    x        = "Reflected rotation angle (°)",
    y        = "log RT (seconds)",
    colour   = "Stimulus",
    linetype = "Item Type"
  )
mrot_rt_angle
```

### (14) Rotation angle by RT and age

```{r}
age_breaks <- c(5, 8, 11, 14)

mrot_items_rt_runs <- mrot_rt_trial %>%
  mutate(
    stimulus = stringr::str_extract(item, "^[a-z]+"),
    angle    = as.integer(stringr::str_extract(item, "\\d+"))
  ) %>%
  filter(stimulus %in% c("duck", "rabbit", "shape"), !is.na(angle)) %>%
  left_join(run_ages, by = c("user_id","run_id")) %>%
  filter(!is.na(age)) %>%                                    # drop missing ages
  group_by(site, user_id, run_id, age, stimulus, item_group, angle) %>%
  summarise(logrt_median_correct = median(log_rt[correct == 1], na.rm = TRUE),
            .groups = "drop")

mrot_items_rt_agebin <- mrot_items_rt_runs %>%
  mutate(age_group = cut(age, breaks = age_breaks,
                         include.lowest = TRUE, right = TRUE)) %>%
  tidyr::drop_na(age_group) %>%
  group_by(site, stimulus, item_group, angle, age_group) %>%
  summarise(logrt_median_correct = median(logrt_median_correct, na.rm = TRUE),
            .groups = "drop")

ggplot(mrot_items_rt_agebin,
       aes(x = angle, y = logrt_median_correct,
           group = interaction(item_group, stimulus),
           colour = stimulus, linetype = item_group)) +
  geom_line(alpha = 0.85) +
  geom_point(size = 1) +
  facet_grid(site ~ age_group) +
  labs(
    title    = "Mental Rotation: log RT by angle within age groups",
    #subtitle = "Fixed 3 bins up to age 14",
    x = "Rotation angle (°)", y = "log RT (s)",
    colour = "Stimulus", linetype = "Item Type"
  )
```

### (15) Histogram - Reaction Time

```{r}
# trial-level data with rt_s already computed above
rt_hist <- mrot_rt_trial %>%
  filter(correct == 1)  

ggplot(rt_hist, aes(x = rt_s)) +
  geom_histogram(bins = 50, boundary = 0) +
  facet_wrap(~ site, scales = "free_y") +
  scale_x_log10() +
  labs(
    title = "RT distribution by site (correct trials)",
    x = "Reaction time (s, log scale)",
    y = "Count"
  )
```
