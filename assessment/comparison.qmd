---
title: "CO vs. DE"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(glue)
```

# Initial Comparison of Colombia and Germany Data

For purposes of quality control, since there are at least two notable differences (apart from geographic) in the two studies:

1.  In CO, most tasks had an early stopping criterion of 3 incorrect trials (in a row). In DE, this threshold was raised to 6, and removed entirely for ToM+HA.
2.  CO data collection was in schools, supervised by researchers, while DE data was collected at home (presumably) under parent supervision.

Thus, we may expect some overall differences in accuracy and trials-per-participant between the two sites (i.e., more trials and lower accuracy in DE vs. CO).

```{r load-data}
co_trials_coded <- read_rds("colombia/stage2/data_processed/trials_coded.rds") |>
  mutate(site = "CO")

ca_trials_coded <- read_rds("canada/data_processed/trials_coded.rds") |>
  mutate(site = "CA", 
         grade = as.numeric(grade))


trials_coded <- read_rds("germany/data_processed/trials_coded.rds") |> 
  mutate(site = "DE", 
         theta_estimate = as.numeric(theta_estimate),
         theta_estimate2 = as.numeric(theta_estimate2),
         theta_se = as.numeric(theta_se),
         theta_se2 = as.numeric(theta_se2),
         grade = as.numeric(grade)) |> 
  bind_rows(co_trials_coded) |>
  bind_rows(ca_trials_coded)
```


```{r}
co_participants <- read_rds("colombia/stage2/data_processed/participants.rds") |>
  mutate(site = "CO",
  grade = as.numeric(grade))
ca_participants <- read_rds("canada/data_processed/participants.rds") |>
  mutate(site = "CA", 
         grade = as.numeric(grade)) 


participants <- read_rds("germany/data_processed/participants.rds") |>
  mutate(site = "DE", 
         grade = as.numeric(grade)) |> 
  bind_rows(co_participants) |>
  bind_rows(ca_trials_coded)

rm(co_trials_coded, co_participants, ca_trials_coded, ca_participants)
```

```{r participant_summary}
participant_summary <- trials_coded |>
  group_by(site, task_group, task, user_id, run_id) |>
  summarise(trials = n(),
            #total_time = sum(as.numeric(rt), na.rm=T),
            num_correct = sum(correct, na.rm = TRUE),
            prop_correct = num_correct / trials) |>
  ungroup() |>
  left_join(participants) |>
  group_by(site, task) |>
  mutate(n = n(),
         n_age = length(discard(age, is.na)),
         task_label = glue("{task}\n(n = {n})"),
         task_label_age = glue("{task}\n(n = {n_age})"),
         prop_trials = trials / max(trials)) |>
  ungroup() |>
  mutate(task_label = fct_inorder(task_label),
         is_zero = prop_correct == 0) |>
  filter(task!="EGMA ()", task!="egma-math")
```

```{r}
by_site <- participant_summary |>
  group_by(task, site) |>
  summarise(mean_trials_completed = mean(trials),
            mean_accuracy = mean(prop_correct), 
            n = length(unique(user_id)),
            mean_age = mean(age, na.rm=T)) 
```

ToDo: revisit mental-rotation coding in CO (extract 2d and 3d)

```{r}
by_site |> 
  # filter(task!="ToM (instructions)") |>
  mutate(task_chr = as.character(task),
         task = ifelse(task_chr=="H&F (hearts)" |
                         task_chr=="H&F (flowers)" |
                         task_chr=="H&F (hearts and flowers)",
                       "hearts-and-flowers", task_chr)) |>
  ggplot(aes(x = task, y = n, fill=site)) +
  geom_col(position = position_dodge()) +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
```

# IRT scores

```{r}
co_scores <- map(list.files("colombia/stage2/scores", full.names = TRUE), 
                 \(f) read_rds(f) |> mutate(site = "CO"))

de_scores <- map(list.files("germany/scores", full.names = TRUE), 
                 \(f) read_rds(f) |> mutate(site = "DE"))

ca_scores <- map(list.files("canada/scores", full.names = TRUE), 
                 \(f) read_rds(f) |> mutate(site = "CA"))

score_list <- c(co_scores, de_scores, ca_scores)
```

```{r}
# exclude_tasks <- c("hostile-attribution", "pa-es")

task_categories <- tribble(
  ~task, ~task_category,
  "hearts-and-flowers", "executive function",
  "same-different-selection", "executive function",
  "memory-game", "executive function",
  "egma-math", "math",
  "matrix-reasoning", "reasoning",
  "mental-rotation", "spatial cognition",
  "trog", "language",
  "vocab", "language",
  "pa-es", "reading",
  "sre-es", "reading",
  "swr-es", "reading",
  "emotion-reasoning", "social cognition",
  "theory-of-mind", "social cognition",
  "hostile-attribution", "social cognition"
) |> mutate(task_category = task_category |> str_to_sentence() |> fct_inorder())

scores <- score_list |>
  bind_rows() |>
  select(-age) |> # remove ages that have come along for the ride and are not directly computed in participants
  # filter(!(task %in% exclude_tasks)) |>
  left_join(participants |> select(user_id, age)) |>
  # left_join(participants) |>
  filter(!is.na(age), age >= 5, age <= 12) |>
  group_by(task) |>
  mutate(n = n_distinct(user_id), task_label = glue("{task}\n(n = {n})")) |>
  ungroup() |>
  left_join(task_categories) |>
  mutate(score_type = score_type |> str_remove(" \\(.*\\)"))
# scores |> count(task, user_id) |> filter(n > 1)

task_categories_vec <- levels(scores$task_category)
# task_pal <- ptol_pal()(length(task_categories_vec)) |> set_names(task_categories_vec)
```

```{r, fig.width=8, fig.height=14}
plot_scores <- scores |> 
  filter(!is.na(age)) 

ns <- plot_scores |> 
  group_by(site, task) |> 
  mutate(n = n(), 
         max_score = max(score))


ggplot(plot_scores,
       aes(x = age, y = score, col = site)) +
  facet_grid(task~site, scales = "free_y") + 
  geom_point(alpha = 0.5) +
  geom_smooth(span = 1, col = "darkgray", se=FALSE) +
  geom_text(data = ns,
            x = 5, aes(label = paste("n=",n), y = max_score), col = "black", 
            vjust = 1, hjust = 0) + 
  scale_x_continuous(breaks = seq(6, 14, 2)) +
  # scale_colour_manual(values = task_pal) +
  labs(x = "Age (years)", y = "Score") +
  ggthemes::scale_color_solarized() +
    theme_bw()

#    # ggh4x::facet_nested_wrap(vars(task_category, task_label), nrow = nr,
#                          nest_line = element_line(), solo_line = TRUE,
#                          axes = "x",
#                          scales = "free_y") +

```

```{r}
ns <- scores |> 
  group_by(site, task) |> 
  mutate(n = n(), 
         max_score = max(score))

scores |>
  # mutate(score_sc = ifelse(task=="mefs" | task=="sre-es", score/10, score)) |>
  ggplot(aes(x = age, y = score, col = site)) + 
  geom_point(alpha=.2) + 
  geom_text(data = ns,
            x = 5, aes(label = paste("n=",n), y = max_score, col = site), 
            vjust = 1, hjust = 0) + 
  geom_smooth() + 
  facet_wrap(~task, scales = "free_y")
```


# Factor analysis

```{r}
scores_wide <- scores |>
  select(-score_type, -task_label, -task_category) |>
  pivot_wider(names_from = "task", values_from = "score", 
              id_cols = c("user_id","site", "age"), 
              values_fn = mean) 

scores_wide_mat <- scores_wide |>
  janitor:::clean_names() |>
  mutate(across(matrix_reasoning:same_different_selection, ~ scale(.x)[,1]))
```

First CFA 

```{r}
library(lavaan)
library(tidySEM)
```

```{r}
cfa_model <-  "
reasoning =~ matrix_reasoning + mental_rotation 
ef =~ hearts_and_flowers + memory_game + mefs + same_different_selection
social =~ theory_of_mind + hostile_attribution + emotion_reasoning
language =~ trog + vocab + sre_es + swr_es
math =~ egma_math
"

fit <- cfa(cfa_model, scores_wide_mat, std.lv=TRUE, missing='fiml')
summary(fit, fit.measures=TRUE, standardize=TRUE)

layout = matrix(nrow=3, ncol = 14, 
                data = c(NA,NA,NA,NA, NA,NA,NA,NA, NA,NA,NA,NA, NA, NA,
                         "reasoning",NA, "ef", NA, NA, NA, "social",NA, NA, "language",NA, NA, NA, 
                         "math",
                         "matrix_reasoning", "mental_rotation", "hearts_and_flowers","memory_game","mefs", "same_different_selection",  "theory_of_mind","hostile_attribution","emotion_reasoning","trog","vocab","sre_es","swr_es","egma_math"), byrow = TRUE)

graph_sem(model = fit, text_size = 3, layout = layout)
```

Add age. 

```{r}
cfa_age_model <-  "
# measurement
reasoning =~ matrix_reasoning + mental_rotation 
ef =~ hearts_and_flowers + memory_game + mefs + same_different_selection
social =~ theory_of_mind + emotion_reasoning
language =~ trog + vocab + sre_es + swr_es
math =~ egma_math

# age regressions
reasoning ~ age
ef ~ age
social ~ age
language ~ age
math ~ age
"

fit <- sem(cfa_age_model, scores_wide_mat, std.lv=TRUE, missing='fiml')
summary(fit, fit.measures=TRUE, standardize=TRUE)

layout = matrix(nrow=5, ncol = 14, 
                data = c(NA,NA,NA,NA, NA,NA,NA, "age", NA,NA,NA,NA, NA, NA,
                  NA,NA,NA,NA, NA,NA,NA,NA, NA,NA,NA,NA, NA, NA,
                         "reasoning",NA, "ef", NA, NA, NA, "social",NA, NA, "language",NA, NA, NA, 
                         "math",
                                    NA,NA,NA,NA, NA,NA,NA,NA, NA,NA,NA,NA, NA, NA,

                         "matrix_reasoning", "mental_rotation", "hearts_and_flowers","memory_game","mefs", "same_different_selection",  "theory_of_mind","hostile_attribution","emotion_reasoning","trog","vocab","sre_es","swr_es","egma_math"), byrow = TRUE)

graph_sem(model = fit, text_size = 3, layout = t(layout))
```

Alternative model putting spatial cognition on its own doesn't see supported (extra construct). 

```{r}
cfa_age_model_alt <-  "
# measurement
reasoning =~ matrix_reasoning
ef =~ hearts_and_flowers + memory_game + mefs + same_different_selection
social =~ theory_of_mind + emotion_reasoning 
language =~ trog + vocab + sre_es + swr_es
math =~ egma_math 
spatial =~ mental_rotation

# age regressions
reasoning ~ age
ef ~ age
social ~ age
language ~ age
math ~ age
spatial ~ age
"

fit_alt <- sem(cfa_age_model_alt, scores_wide_mat, std.lv=TRUE, missing='fiml')
summary(fit_alt, fit.measures=TRUE, standardize=TRUE)
layout_alt = matrix(nrow=4, ncol = 14, 
                data = c(NA,NA,NA,NA, NA,NA,NA, "age", NA,NA,NA,NA, NA, NA,
                  NA,NA,NA,NA, NA,NA,NA,NA, NA,NA,NA,NA, NA, NA,
                         "reasoning","spatial", "ef", NA, NA, NA, "social",NA, NA, "language",NA, NA, NA, 
                         "math",
                         "matrix_reasoning", "mental_rotation", "hearts_and_flowers","memory_game","mefs", "same_different_selection",  "theory_of_mind","hostile_attribution","emotion_reasoning","trog","vocab","sre_es","swr_es","egma_math"), byrow = TRUE)
graph_sem(model = fit_alt, text_size = 3, layout = layout_alt)

anova(fit,fit_alt)
```
## Site specific

```{r}
cfa_age_model <-  "
# measurement
reasoning =~ matrix_reasoning + mental_rotation 
ef =~ hearts_and_flowers + memory_game + mefs + same_different_selection
social =~ theory_of_mind + emotion_reasoning
language =~ trog + vocab + sre_es + swr_es
math =~ egma_math

# age regressions
reasoning ~ age
ef ~ age
social ~ age
language ~ age
math ~ age
"

fit <- sem(cfa_age_model, filter(scores_wide_mat, site == "DE"), std.lv=TRUE, missing='fiml')
summary(fit, fit.measures=TRUE, standardize=TRUE)

layout = matrix(nrow=5, ncol = 14, 
                data = c(NA,NA,NA,NA, NA,NA,NA, "age", NA,NA,NA,NA, NA, NA,
                  NA,NA,NA,NA, NA,NA,NA,NA, NA,NA,NA,NA, NA, NA,
                         "reasoning",NA, "ef", NA, NA, NA, "social",NA, NA, "language",NA, NA, NA, 
                         "math",
                                    NA,NA,NA,NA, NA,NA,NA,NA, NA,NA,NA,NA, NA, NA,

                         "matrix_reasoning", "mental_rotation", "hearts_and_flowers","memory_game","mefs", "same_different_selection",  "theory_of_mind","hostile_attribution","emotion_reasoning","trog","vocab","sre_es","swr_es","egma_math"), byrow = TRUE)

graph_sem(model = fit, text_size = 3, layout = t(layout))
```

## Age exploration

Let's try a model that adds log age instead of / as well as age. 

```{r}
scores_wide_mat$log_age <- log(scores_wide_mat$age)
cfa_age_model <-  "
# measurement
reasoning =~ matrix_reasoning + mental_rotation 
ef =~ hearts_and_flowers + memory_game + mefs + same_different_selection
social =~ theory_of_mind + emotion_reasoning
language =~ trog + vocab + sre_es + swr_es
math =~ egma_math

# age regressions
reasoning ~ age + log_age
ef ~ age + log_age
social ~ age + log_age
language ~ age + log_age
math ~ age + log_age
"

fit <- sem(cfa_age_model, scores_wide_mat, std.lv=TRUE, missing='fiml')
summary(fit, fit.measures=TRUE, standardize=TRUE)

layout = matrix(nrow=4, ncol = 14, 
                data = c(NA,NA,NA,NA, NA,NA,"log_age", "age", NA,NA,NA,NA, NA, NA,
                  NA,NA,NA,NA, NA,NA,NA,NA, NA,NA,NA,NA, NA, NA,
                         "reasoning",NA, "ef", NA, NA, NA, "social",NA, NA, "language",NA, NA, NA, 
                         "math",
                         "matrix_reasoning", "mental_rotation", "hearts_and_flowers","memory_game","mefs", "same_different_selection",  "theory_of_mind","hostile_attribution","emotion_reasoning","trog","vocab","sre_es","swr_es","egma_math"), byrow = TRUE)

graph_sem(model = fit, text_size = 3, layout = t(layout))
```

Median split on age

```{r}
fit_younger <- cfa(cfa_model, data = filter(scores_wide_mat, age < 9),
                   std.lv=TRUE, missing='fiml')
fit_older <- cfa(cfa_model, data = filter(scores_wide_mat, age >= 9),
                 std.lv=TRUE, missing='fiml')
summary(fit_younger, fit.measures=TRUE, standardize=TRUE)
summary(fit_older, fit.measures=TRUE, standardize=TRUE)

graph_sem(model = fit_younger, text_size = 3, layout = layout)
graph_sem(model = fit_older, text_size = 3, layout = layout)
```


## Hostile attribution etc. 

```{r}
ha <- trials_coded |>
  filter(subtask == "hostile-attribution", !is.na(age)) |>
  group_by(site, user_id, run_id, age) |>
  summarise(correct = sum(correct))

ggplot(ha, aes(x = age, y = correct, col = site)) + 
  geom_jitter(alpha = .5, width = 0, height = .1)+ 
  geom_smooth() + 
  ylab("Number of hostile answers") + 
  xlab("Age")
```

```{r}
ha_subtype <- trials_coded |>
  mutate(corpus_trial_type = ifelse(site == "DE", corpus_trial_type, 
                                    ifelse(str_detect(distractors, "q2"), "action", "attribution"))) |> 
  filter(subtask == "hostile-attribution", !is.na(age)) |>
  group_by(site, user_id, run_id, age, corpus_trial_type) |>
  summarise(correct = sum(correct))

ggplot(ha_subtype, aes(x = age, y = correct, col = site)) + 
  geom_jitter(alpha = .5, width = 0, height = .1)+ 
  geom_smooth() + 
  facet_wrap(~corpus_trial_type) + 
  ylab("Number of hostile answers") + 
  xlab("Age")
```

```{r}
ha_subtype |>
  pivot_wider(names_from = "corpus_trial_type", values_from = "correct") |>
  ggplot(aes(x = action, y = attribution, col = site)) + 
  geom_jitter() + 
  geom_smooth(method = "lm") 
```
